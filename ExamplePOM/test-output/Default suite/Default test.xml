<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="MD-Kabir" ignored="4" name="Default test" tests="3" failures="0" timestamp="24 Jan 2017 05:45:05 GMT" time="13.3" errors="0">
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="TestPackage.BaseTest">
    <failure type="org.openqa.selenium.NoSuchSessionException" message="Session ID is null. Using WebDriver after calling quit()?
Build info: version: &amp;apos;unknown&amp;apos;, revision: &amp;apos;1969d75&amp;apos;, time: &amp;apos;2016-10-18 09:43:45 -0700&amp;apos;
System info: host: &amp;apos;MD-Kabir&amp;apos;, ip: &amp;apos;192.168.17.1&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_111&amp;apos;
Driver info: driver.version: RemoteWebDriver">
      <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: 'unknown', revision: '1969d75', time: '2016-10-18 09:43:45 -0700'
System info: host: 'MD-Kabir', ip: '192.168.17.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: driver.version: RemoteWebDriver
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:130)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:322)
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteNavigation.to(RemoteWebDriver.java:902)
	at TestPackage.BaseTest.beforeMethod(BaseTest.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:590)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="TestPackage.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterClass afterClass" time="0.0" classname="TestPackage.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase name="test3" time="1.046" classname="TestPackage.Test3"/>
  <testcase name="test1" time="0.806" classname="TestPackage.Test1"/>
  <testcase name="test2" time="0.003" classname="TestPackage.Test1">
    <skipped/>
  </testcase> <!-- test2 -->
  <testcase name="@AfterSuite afterSuite" time="0.0" classname="TestPackage.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase name="@AfterSuite afterSuite" time="0.0" classname="TestPackage.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="TestPackage.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="TestPackage.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
</testsuite> <!-- Default test -->
